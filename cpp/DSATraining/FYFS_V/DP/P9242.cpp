/*
[蓝桥杯 2023 省 B] 接龙数列
题目描述
对于一个长度为 K 的整数数列：A1, A2, ... AK，
我们称之为接龙数列当且仅当 Ai 的首位数字恰好等于 Ai−1 的末位数字（2≤i≤K）。

例如 12,23,35,56,61,11 是接龙数列；
12,23,34,56 不是接龙数列，因为 56 的首位数字不等于 34 的末位数字。
所有长度为 1 的整数数列都是接龙数列。

现在给定一个长度为 N 的数列 A1, A2, ... AN，请你计算最少从中删除多少个数，可以使剩下的序列是接龙序列？

输入格式
第一行包含一个整数 N。
第二行包含 N 个整数 

输出格式
一个整数代表答案。
*/

/* 
    最长上升序列，上升条件为首尾相接，
    
    但是使用朴素的最长上升序列算法会超时，
    我们将其转化为寻找以0-9每个数字结尾的最长接龙数列的长度。
*/

#include<bits/stdc++.h> 
using namespace std;

const int N = 1e5 + 5;
string a[N];
int f[10], n, maxL;

int main( )
{
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> a[i];
    for (int i = 1; i <= n; i++) 
    {
        f[a[i].back() - '0'] = max(f[a[i].back() - '0'], f[a[i].front() - '0'] + 1);
    }
    for (int i = 0; i <= 9; i++) maxL = max(f[i], maxL);
    cout << n - maxL << endl;
    return 0;
}