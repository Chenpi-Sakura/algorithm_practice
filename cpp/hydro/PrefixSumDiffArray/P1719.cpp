/*
#P1719. 最大加权矩形

题目描述
为了更好的备战 NOIP2013，电脑组的几个女孩子 LYQ,ZSC,ZHQ 认为，我们不光需要机房，我们还需要运动，于是就决定找校长申请一块电脑组的课余运动场地，听说她们都是电脑组的高手，校长没有马上答应他们，而是先给她们出了一道数学题，并且告诉她们：你们能获得的运动场地的面积就是你们能找到的这个最大的数字。

校长先给他们一个 n×n 矩阵。要求矩阵中最大加权矩形，即矩阵的每一个元素都有一权值，权值定义在整数集上。从中找一矩形，矩形大小无限制，是其中包含的所有元素的和最大 。矩阵的每个元素属于 [−127,127] ,例如

0 –2 –7  0
9  2 –6  2
-4  1 –4  1
-1  8  0 –2

在左下角：

9  2
-4  1
-1  8

和为 15。

几个女孩子有点犯难了，于是就找到了电脑组精打细算的 HZH，TZY 小朋友帮忙计算，但是遗憾的是他们的答案都不一样，涉及土地的事情我们可不能含糊，你能帮忙计算出校长所给的矩形中加权和最大的矩形吗？

输入格式
第一行：n，接下来是 n 行 n 列的矩阵。

输出格式
最大矩形（子矩阵）的和。

Reflection:
大抵是用前缀和吧，找到前缀和最大的地方?
*/

#include <iostream>
using namespace std;

int a[130][130], s[130][130];
int main()
{
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            cin >> a[i][j];
            s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + a[i][j];
        }
    }

    int r = -1e9, t;
    for (int x1 = 1; x1 <= n; x1++)
    {
        for (int y1 = 1; y1 <= n; y1++)
        {
            for (int x2 = 1; x2 <= n; x2++)
            {
                for (int y2 = 1; y2 <= n; y2++)
                {
                    if (x2 < x1 || y2 < y1)
                        continue; // 避免出现左上角在右下角的右下方向
                    t = s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1];
                    if (t > r)
                    {
                        r = t;
                    }
                }
            }
        }
    }

    cout << r;

    return 0;
}